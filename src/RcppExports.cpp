// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// polar2cartesian
Rcpp::NumericMatrix polar2cartesian(arma::vec r, arma::vec theta);
RcppExport SEXP _sccm_polar2cartesian(SEXP rSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type r(rSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(polar2cartesian(r, theta));
    return rcpp_result_gen;
END_RCPP
}
// cartesian2polar
Rcpp::NumericMatrix cartesian2polar(arma::vec x, arma::vec y);
RcppExport SEXP _sccm_cartesian2polar(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(cartesian2polar(x, y));
    return rcpp_result_gen;
END_RCPP
}
// convex_hull_cpp
Rcpp::List convex_hull_cpp(Rcpp::NumericVector x, Rcpp::NumericVector y);
RcppExport SEXP _sccm_convex_hull_cpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(convex_hull_cpp(x, y));
    return rcpp_result_gen;
END_RCPP
}
// is_in_cpp
Rcpp::IntegerVector is_in_cpp(Rcpp::NumericVector x, Rcpp::NumericVector y, Rcpp::NumericMatrix v);
RcppExport SEXP _sccm_is_in_cpp(SEXP xSEXP, SEXP ySEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(is_in_cpp(x, y, v));
    return rcpp_result_gen;
END_RCPP
}
// polygon_cpp
Rcpp::List polygon_cpp(Rcpp::NumericVector x, Rcpp::NumericVector y);
RcppExport SEXP _sccm_polygon_cpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(polygon_cpp(x, y));
    return rcpp_result_gen;
END_RCPP
}

RcppExport void d2p_(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void p2d_(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void scmap_(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);

static const R_CallMethodDef CallEntries[] = {
    {"_sccm_polar2cartesian", (DL_FUNC) &_sccm_polar2cartesian, 2},
    {"_sccm_cartesian2polar", (DL_FUNC) &_sccm_cartesian2polar, 2},
    {"_sccm_convex_hull_cpp", (DL_FUNC) &_sccm_convex_hull_cpp, 2},
    {"_sccm_is_in_cpp", (DL_FUNC) &_sccm_is_in_cpp, 3},
    {"_sccm_polygon_cpp", (DL_FUNC) &_sccm_polygon_cpp, 2},
    {"d2p_",   (DL_FUNC) &d2p_,   11},
    {"p2d_",   (DL_FUNC) &p2d_,   11},
    {"scmap_", (DL_FUNC) &scmap_, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_sccm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
